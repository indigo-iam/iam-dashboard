# SPDX-FileCopyrightText: 2025 Istituto Nazionale di Fisica Nucleare
#
# SPDX-License-Identifier: EUPL-1.2

services:
  database:
    container_name: iam-database
    image: mysql:latest
    environment:
      TZ: Europe/Rome
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_ROOT_PASSWORD: pwd
      MYSQL_USER: iam
      MYSQL_PASSWORD: pwd
      MYSQL_DATABASE: iam
      MYSQL_ROOT_HOST: "%"
    ports:
      - "3306:3306"
    restart: on-failure
    healthcheck:
      test:
        ["CMD", "mysql", "-u", "iam", "-ppwd", "--execute", "SHOW DATABASES;"]
      interval: 3s
      retries: 5
      timeout: 5s
    volumes:
      - iam-db:/var/lib/mysql

  client_registrant:
    container_name: iam-client-registrant
    entrypoint: /entrypoint.sh
    depends_on:
      - database
    image: mysql:latest
    environment:
      TZ: Europe/Rome
      MYSQL_USER: iam
      MYSQL_PASSWORD: pwd
      MYSQL_DATABASE: iam
    volumes:
      - ./register_client.sh:/entrypoint.sh
      - ./register_client.sql:/register_client.sql
      - ./.template.env:/.template.env
      - secrets:/secrets

  login_service:
    container_name: iam-login-service
    image: indigoiam/iam-login-service:latest
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    environment:
      IAM_JAVA_OPTS: -Dspring.profiles.active=mysql-test,oidc,registration
      TZ: Europe/Rome
      IAM_PORT: 8080
      IAM_HOST: iam.test.example
      IAM_BASE_URL: http://iam.test.example:8080
      IAM_ISSUER: http://iam.test.example:8080
      IAM_KEY_STORE_LOCATION: file:/keys/json-keystore.jwks
      IAM_DB_PORT: 3306
      IAM_DB_USERNAME: iam
      IAM_DB_PASSWORD: pwd
      IAM_DB_HOST: database
      IAM_DATABASE_SHOW_SQL: false
      IAM_REGISTRATION_AUTHENTICATION_TYPE: oidc
      IAM_ACCESS_TOKEN_INCLUDE_SCOPE: true
      IAM_SCIM_INCLUDE_AUTHORITIES: true
      IAM_REGISTRATION_OIDC_ISSUER: ${REGISTRATION_OIDC_ISSUER:-https://example.org}
      IAM_ORGANISATION_NAME: cnafsd
    healthcheck:
      test: [CMD, "curl", "-f", "http://localhost:8080/actuator/health"]
    volumes:
      - ./json-keystore.jwks:/keys/json-keystore.jwks:ro

  dashboard:
    container_name: iam-dashboard
    image: iam-dashboard
    build:
      context: .
      args:
        NEXT_PUBLIC_BASE_PATH: /new-dashboard
    entrypoint: "/entrypoint.sh"
    command: ["node", "server.js"]
    volumes:
      - secrets:/app
      - ./wait_for_env.sh:/entrypoint.sh
    depends_on:
      login_service:
        condition: service_healthy
      client_registrant:
        condition: service_completed_successfully

  nginx:
    image: nginx:1.24.0
    container_name: iam-nginx
    hostname: iam.test.example
    restart: unless-stopped
    depends_on:
      dashboard:
        condition: service_started
      login_service:
        condition: service_healthy
    command: ["nginx-debug", "-g", "daemon off;"]
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf

volumes:
  iam-db:
  secrets:
